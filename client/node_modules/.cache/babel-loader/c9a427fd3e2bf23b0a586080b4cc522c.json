{"ast":null,"code":"import _regeneratorRuntime from \"/home/codrut/Projects/react_file_uploader/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/codrut/Projects/react_file_uploader/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/codrut/Projects/react_file_uploader/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codrut/Projects/react_file_uploader/client/src/components/FileUpload.js\";\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\n\nvar FileUpload = function FileUpload() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState('Choose File'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uploadedFile = _useState6[0],\n      setUploadedFile = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      uploadPercentage = _useState10[0],\n      setUploadPercentage = _useState10[1];\n\n  var onChange = function onChange(e) {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var formData, res, _res$data, fileName, filePath;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              formData = new FormData();\n              formData.append('file', file);\n              _context.prev = 3;\n              _context.next = 6;\n              return axios.post('/upload', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                },\n                onUploadProgress: function onUploadProgress(progressEvent) {\n                  setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n                }\n              });\n\n            case 6:\n              res = _context.sent;\n              // Clear percentage\n              setTimeout(function () {\n                return setUploadPercentage(0);\n              }, 10000);\n              _res$data = res.data, fileName = _res$data.fileName, filePath = _res$data.filePath;\n              setUploadedFile({\n                fileName: fileName,\n                filePath: filePath\n              });\n              setMessage('File Uploaded');\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](3);\n\n              if (_context.t0.response.status === 500) {\n                setMessage('There was a problem with the server');\n              } else {\n                setMessage(_context.t0.response.data.msg);\n              }\n\n              setUploadPercentage(0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 13]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, message ? React.createElement(Message, {\n    msg: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) : null, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, filename)), React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), uploadedFile ? React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, uploadedFile.fileName), React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/home/codrut/Projects/react_file_uploader/client/src/components/FileUpload.js"],"names":["React","Fragment","useState","Message","Progress","axios","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","res","setTimeout","data","fileName","filePath","response","status","msg","width"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACAJ,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MACjBK,IADiB;AAAA,MACXC,OADW;;AAAA,mBAEQN,QAAQ,CAAC,aAAD,CAFhB;AAAA;AAAA,MAEjBO,QAFiB;AAAA,MAEPC,WAFO;;AAAA,mBAGgBR,QAAQ,CAAC,EAAD,CAHxB;AAAA;AAAA,MAGjBS,YAHiB;AAAA,MAGHC,eAHG;;AAAA,mBAIMV,QAAQ,CAAC,EAAD,CAJd;AAAA;AAAA,MAIjBW,OAJiB;AAAA,MAIRC,UAJQ;;AAAA,mBAKwBZ,QAAQ,CAAC,CAAD,CALhC;AAAA;AAAA,MAKjBa,gBALiB;AAAA,MAKCC,mBALD;;AAOxB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACvBV,IAAAA,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAV,IAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX;AACA,GAHD;;AAKA,MAAMC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOJ,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBA,cAAAA,CAAC,CAACK,cAAF;AACMC,cAAAA,QAFU,GAEC,IAAIC,QAAJ,EAFD;AAGhBD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBnB,IAAxB;AAHgB;AAAA;AAAA,qBAMGF,KAAK,CAACsB,IAAN,CAAW,SAAX,EAAsBH,QAAtB,EAAgC;AACjDI,gBAAAA,OAAO,EAAE;AACR,kCAAgB;AADR,iBADwC;AAIjDC,gBAAAA,gBAAgB,EAAE,0BAACC,aAAD,EAAmB;AACpCd,kBAAAA,mBAAmB,CAClBe,QAAQ,CACPC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAACI,MAAd,GAAuB,GAAxB,GAA+BJ,aAAa,CAACK,KAAxD,CADO,CADU,CAAnB;AAKA;AAVgD,eAAhC,CANH;;AAAA;AAMTC,cAAAA,GANS;AAmBf;AACAC,cAAAA,UAAU,CAAC;AAAA,uBAAMrB,mBAAmB,CAAC,CAAD,CAAzB;AAAA,eAAD,EAA+B,KAA/B,CAAV;AApBe,0BAsBgBoB,GAAG,CAACE,IAtBpB,EAsBPC,QAtBO,aAsBPA,QAtBO,EAsBGC,QAtBH,aAsBGA,QAtBH;AAwBf5B,cAAAA,eAAe,CAAC;AAAE2B,gBAAAA,QAAQ,EAARA,QAAF;AAAYC,gBAAAA,QAAQ,EAARA;AAAZ,eAAD,CAAf;AAEA1B,cAAAA,UAAU,CAAC,eAAD,CAAV;AA1Be;AAAA;;AAAA;AAAA;AAAA;;AA4Bf,kBAAI,YAAI2B,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAChC5B,gBAAAA,UAAU,CAAC,qCAAD,CAAV;AACA,eAFD,MAEO;AACNA,gBAAAA,UAAU,CAAC,YAAI2B,QAAJ,CAAaH,IAAb,CAAkBK,GAAnB,CAAV;AACA;;AACD3B,cAAAA,mBAAmB,CAAC,CAAD,CAAnB;;AAjCe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARM,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAqCA,SACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACET,OAAO,GAAG,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA+B,IADxC,EAEC;AAAM,IAAA,QAAQ,EAAES,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,SAAS,EAAC,mBAFX;AAGC,IAAA,EAAE,EAAC,YAHJ;AAIC,IAAA,QAAQ,EAAEL,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAOC;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAqC,IAAA,OAAO,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACER,QADF,CAPD,CADD,EAaC,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEM,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,EAeC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,KAAK,EAAC,QAFP;AAGC,IAAA,SAAS,EAAC,gCAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfD,CAFD,EAuBEJ,YAAY,GACZ;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,YAAY,CAAC4B,QAA1C,CADD,EAEC;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAA+B,IAAA,GAAG,EAAEjC,YAAY,CAAC6B,QAAjD;AAA2D,IAAA,GAAG,EAAC,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,CADY,GAOT,IA9BL,CADD;AAkCA,CAnFD;;AAqFA,eAAelC,UAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n\tconst [file, setFile] = useState('');\n\tconst [filename, setFilename] = useState('Choose File');\n\tconst [uploadedFile, setUploadedFile] = useState({});\n\tconst [message, setMessage] = useState('');\n\tconst [uploadPercentage, setUploadPercentage] = useState(0);\n\n\tconst onChange = (e) => {\n\t\tsetFile(e.target.files[0]);\n\t\tsetFilename(e.target.files[0].name);\n\t};\n\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst formData = new FormData();\n\t\tformData.append('file', file);\n\n\t\ttry {\n\t\t\tconst res = await axios.post('/upload', formData, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t\tonUploadProgress: (progressEvent) => {\n\t\t\t\t\tsetUploadPercentage(\n\t\t\t\t\t\tparseInt(\n\t\t\t\t\t\t\tMath.round((progressEvent.loaded * 100) / progressEvent.total)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// Clear percentage\n\t\t\tsetTimeout(() => setUploadPercentage(0), 10000);\n\n\t\t\tconst { fileName, filePath } = res.data;\n\n\t\t\tsetUploadedFile({ fileName, filePath });\n\n\t\t\tsetMessage('File Uploaded');\n\t\t} catch (err) {\n\t\t\tif (err.response.status === 500) {\n\t\t\t\tsetMessage('There was a problem with the server');\n\t\t\t} else {\n\t\t\t\tsetMessage(err.response.data.msg);\n\t\t\t}\n\t\t\tsetUploadPercentage(0);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{message ? <Message msg={message} /> : null}\n\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t<div className=\"custom-file mb-4\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tclassName=\"custom-file-input\"\n\t\t\t\t\t\tid=\"customFile\"\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<label className=\"custom-file-label\" htmlFor=\"customFile\">\n\t\t\t\t\t\t{filename}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\n\t\t\t\t<Progress percentage={uploadPercentage} />\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvalue=\"Upload\"\n\t\t\t\t\tclassName=\"btn btn-primary btn-block mt-4\"\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t{uploadedFile ? (\n\t\t\t\t<div className=\"row mt-5\">\n\t\t\t\t\t<div className=\"col-md-6 m-auto\">\n\t\t\t\t\t\t<h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n\t\t\t\t\t\t<img style={{ width: '100%' }} src={uploadedFile.filePath} alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</Fragment>\n\t);\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}